{
  "_from": "eslint-plugin-ramda",
  "_id": "eslint-plugin-ramda@2.5.1",
  "_inBundle": false,
  "_integrity": "sha512-1Uuyl5hMiyBNsn1F0Px0q8hGX95HC6CAzaEBeKngwixXwsbw+j98U7fatxDME8lUKyLPXuO5Ulon2QOcwVDrxw==",
  "_location": "/eslint-plugin-ramda",
  "_phantomChildren": {},
  "_requested": {
    "type": "tag",
    "registry": true,
    "raw": "eslint-plugin-ramda",
    "name": "eslint-plugin-ramda",
    "escapedName": "eslint-plugin-ramda",
    "rawSpec": "",
    "saveSpec": null,
    "fetchSpec": "latest"
  },
  "_requiredBy": [
    "#DEV:/",
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/eslint-plugin-ramda/-/eslint-plugin-ramda-2.5.1.tgz",
  "_shasum": "36c2592300c383471aaac1ba26e9fca6f37a11b2",
  "_spec": "eslint-plugin-ramda",
  "_where": "/Users/lee/Projects/CorporaQueryInputRefactor",
  "author": {
    "name": "Marcelo Camargo",
    "email": "marcelocamargo@linuxmail.org"
  },
  "bugs": {
    "url": "https://github.com/ramda/eslint-plugin-ramda/issues"
  },
  "bundleDependencies": false,
  "contributors": [
    {
      "name": "Mathias Schreck",
      "email": "schreck.mathias@gmail.com"
    }
  ],
  "dependencies": {
    "create-eslint-index": "^1.0.0",
    "ramda": "0.25.0",
    "req-all": "^1.0.0"
  },
  "deprecated": false,
  "description": "ESLint rules for use with Ramda",
  "devDependencies": {
    "ava": "^0.23.0",
    "codecov": "^3.0.0",
    "eslint": "~4.11.0",
    "eslint-ava-rule-tester": "^2.0.2",
    "nyc": "^11.3.0"
  },
  "engines": {
    "node": ">=4.0.0"
  },
  "files": [
    "index.js",
    "ast-helper.js",
    "rules/",
    "LICENSE",
    "README.md"
  ],
  "homepage": "https://github.com/ramda/eslint-plugin-ramda#readme",
  "keywords": [
    "eslint",
    "eslintplugin",
    "eslint-plugin",
    "ramda",
    "fantasy-land"
  ],
  "license": "MIT",
  "main": "index.js",
  "name": "eslint-plugin-ramda",
  "repository": {
    "type": "git",
    "url": "git://github.com/ramda/eslint-plugin-ramda.git"
  },
  "scripts": {
    "lint": "eslint ./",
    "report-coverage": "nyc report --reporter=lcov > coverage.lcov && codecov",
    "test": "nyc ava"
  },
  "version": "2.5.1"
}
